# Example .bluewasp.yml configuration file with Docker containers

# Regular commands (these already worked before)
commands:
  - name: hello
    description: Print a hello message
    command: echo "Hello, World!"

  - name: list-files
    description: List files in the current directory
    command: ls -la

# Define stages (already worked before)
stages:
  - name: basic-stage
    description: A basic stage with multiple commands
    commands:
      - hello
      - list-files

# Define sequences (already worked before)
sequences:
  - name: basic-sequence
    description: A basic sequence with one stage
    stages:
      - basic-stage

# New Docker container definitions
containers:
  - name: postgres-db
    description: PostgreSQL database container
    image: postgres
    tag: 13
    ports:
      - host: 5432
        container: 5432
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_DB: testdb
    volumes:
      - source: ./data/postgres
        target: /var/lib/postgresql/data
    restart_policy: unless-stopped

  - name: redis-cache
    description: Redis cache container
    image: redis
    tag: alpine
    ports:
      - host: 6379
        container: 6379
    volumes:
      - source: ./data/redis
        target: /data
    restart_policy: always
    command: redis-server --appendonly yes

  - name: nginx-web
    description: Nginx web server
    image: nginx
    tag: latest
    ports:
      - host: 8080
        container: 80
    volumes:
      - source: ./www
        target: /usr/share/nginx/html
        readonly: true
      - source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
        readonly: true
    healthcheck:
      command: curl --fail http://localhost:80/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart_policy: on-failure

  - name: nodejs-app
    description: Node.js application container
    image: node
    tag: 16-alpine
    ports:
      - host: 3000
        container: 3000
    volumes:
      - source: ./app
        target: /app
    workdir: /app
    environment:
      NODE_ENV: development
    command: npm start
    restart_policy: on-failure
    network: host
    remove_when_stopped: true 